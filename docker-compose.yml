services:
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.57
    restart: always

    volumes:
      - ./jaeger-config.yaml:/etc/jaeger/config.yaml
    environment:
      COLLECTOR_OTLP_ENABLED: 'true'
    ports:
      - 127.0.0.1:16686:16686
      - 4318:4318
    networks:
      - app_shared_network

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:v7.0.7
    restart: unless-stopped

    environment:
      DOZZLE_AUTH_PROVIDER: simple
    ports:
      - 49152:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/dozzle/data:/data

  db:
    container_name: db
    image: postgres:16.3
    restart: always

    environment:
      POSTGRES_USER: ${APP_POSTGRES_USER}
      PGUSER: ${APP_POSTGRES_USER}
      POSTGRES_PASSWORD: ${APP_POSTGRES_PASSWORD}
      POSTGRES_DB: ${APP_POSTGRES_DB}
    ports:
      - '127.0.0.1:5432:5432'
    networks:
      - app_shared_network
    volumes:
      - app_pg_data:/var/lib/postgresql/data

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d ${APP_POSTGRES_DB} -U ${APP_POSTGRES_USER}']
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 7

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile.app
    restart: no

    environment:
      APP_DATABASE_URL: ${APP_DATABASE_URL}

    networks:
      - app_shared_network

    develop:
      watch:
        - action: sync+restart
          path: ./src
          target: /bot-app/src
          ignore:
            - .env
            - .env.test

        - action: rebuild
          path: ./prisma/schema.prisma

        - action: rebuild
          path: ./prisma/seed.ts

        - action: rebuild
          path: ./docker-compose.yml

        - action: rebuild
          path: ./Makefile

        - action: rebuild
          path: ./package.json

    depends_on:
      db:
        condition: service_healthy
      jaeger:
        condition: service_started

volumes:
  app_pg_data:

networks:
  app_shared_network:
    driver: bridge
